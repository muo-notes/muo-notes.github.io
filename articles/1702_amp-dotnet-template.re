= AMPと相性良い.NET向けテンプレートエンジンを探す→ひとまずDotLiquidに決める

お読み頂いているこのblogはAMP版のみで構成されており、いわゆる通常版のページが存在しません@<fn>{same-canonical-uri}。

blogの元データはRe:VIEWで作成しているため、出力までの間になにかしらのテンプレートエンジンが必要です。
大層な置換作業をやるわけじゃないし、そんなのなんでもいいじゃないかと思わないでもないのですが、やはり不便な箇所が色々と出てくるためそうもいきません。

テンプレートエンジンを雑に選ぶと後で苦労する(経験上)ので、ざっと選定条件を決めて選んでみました。

== 条件

 * .NET Coreでさらっと使えること
 ** 今回わりと重視したのがこれ。blog記事の変換ツールはC#でサラサラと書けることを前提とするため、.NETで(C#から)簡単に利用できるものを選んだ
 ** Jekyllは割と重いと聞いているし、完全に趣味のものをRubyでゴリゴリやる元気もないので.NETでいく
 ** まあいろいろやって飽きてきたらJS(Node.js)筋に寄せてビルドという方針も普通にアリだと思う。まずは書きたいように作る
 * 外部依存が多すぎないこと
 ** 依存関係で20-30個のパッケージを芋づる式に拾ってくるのはなんというかno thank you
 * なるべく「よくある」書式であること
 ** 「ぼくのかんがえたさいきょうのテンプレートエンジン」である必要はない。むしろ、それなりに方言は許容できますがなるべく可搬性の高い記述様式で書けることを期待する
 * あまりリッチすぎないこと
 ** ひとつ前の条件に近いところ。あまりリッチすぎる書式を選ぶとあとあと大変なので、若干不便なぐらい絞り込まれた機能セットのもののほうが良い

//footnote[same-canonical-uri][つまり、ヘッダ内のcanonical URI指定がAMP版のページ自体を指しています]

== 書式はliquidあたりがまあ無難→DotLiquid

RazorEngineはなんというかT4系の用途に振りまくっている上にnetcoreappで扱えないので無しとしました。
もう2-3探したんですが、きっちり評価する前に心が折れてきたので適当に@<href>{http://dotliquidmarkup.org/, DotLiquid}を使ってみることにしました。

DotLiquidは、その名のとおり.NETで使えるliquid系のテンプレートエンジンです。
liquidはそれなりに組み込み演算子などが充実しており、そこそこ仕様をカバーして実装するのが面倒そうなのですが、DotLiquidは割と頑張ってほとんどのケースを実装しているようです。
@<href>{https://github.com/dotliquid/dotliquid/issues, issues}を眺めてみるとそれなりに非対応のエッジケースがありそうですが、きっと自分が踏むことはないので安心しておきます(フラグ)。

== DotLiquidのよいところ

 * 外部依存無しでそれなりのliquid構文を利用できること
 ** 普通に書いたら普通にビルドできる

== DotLiquidのイマイチなところ

=== メンテナが心折れている

もう1年弱ぐらい@<href>{https://github.com/dotliquid/dotliquid/commit/c0f106c4aef43bd80b16f250cce3370ccb7bab81#diff-0a369498a5a8db3ac8fa606b544c9810, メンテナ求む}とREADMEに書かれています。
メンテナが悪いというわけでは全くないのですが、やはりPRは放置気味です。

== {{{ }}}による謎のリテラル表記拡張がおこなわれている

本題を思い出すと、私がDotLiquidを適用したい相手はAMP用のテンプレートです。
そしてAMPというか、その中でamp-listに適用できるmustacheによるテンプレート処理では、{{{ }}}が意味を持っています。

ここで大変微妙なことに、DotLiquidは「Shorthand記法」をいくつか持っています。
このなかに「指定範囲の記述をliquid処理エンジンで無視する」ための記述である「{literal} ～ {/literal}」に展開される、「{{{ ... }}}」があります。
この構文は@<href>{https://github.com/dotliquid/dotliquid/blob/master/src/DotLiquid/Tags/Literal.cs#L26-L33}で展開されており、しかも展開をオフにするオプションがありません。

これは少々問題ですが、差し当たり自分で使う範囲ではamp-listの中で{{{ }}}を使わないつもりなのでこのまま進めることにします。
もうしばらく使ってみて不便そうならDotLiquidへパッチを投げるか考える方針でいきます(前述のメンテナ心折れ状態により、パッチを投げるハードルが若干上がっている)。
